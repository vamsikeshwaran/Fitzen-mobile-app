{"version":3,"names":["sRGBToLinear","value","v","Math","pow","decodeDC","intR","intG","intB","r","g","b","decode83","str","i","length","c","digit","digitCharacters","indexOf","validateBlurhash","blurhash","Error","sizeFlag","numY","floor","numX","isBlurhashValid","error","message","JSON","stringify","isValid","errorReason"],"sources":["utils.ts"],"sourcesContent":["// Some functions from the Blurhash JS implementation that are used for light tasks (such as getting the average color or validating if a blurhash string is valid)\n\nexport interface RGB {\n\t/**\n\t * The Red value component of this RGB instance. Ranges from 0 to 255.\n\t */\n\tr: number;\n\t/**\n\t * The Green value component of this RGB instance. Ranges from 0 to 255.\n\t */\n\tg: number;\n\t/**\n\t * The Blue value component of this RGB instance. Ranges from 0 to 255.\n\t */\n\tb: number;\n}\n\nfunction sRGBToLinear(value: number): number {\n\tconst v = value / 255;\n\tif (v <= 0.04045) return v / 12.92;\n\telse return Math.pow((v + 0.055) / 1.055, 2.4);\n}\n\nexport function decodeDC(value: number): RGB {\n\tconst intR = value >> 16;\n\tconst intG = (value >> 8) & 255;\n\tconst intB = value & 255;\n\treturn { r: sRGBToLinear(intR) * 255, g: sRGBToLinear(intG) * 255, b: sRGBToLinear(intB) * 255 };\n}\n\nexport function decode83(str: string): number {\n\tlet value = 0;\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst c = str[i];\n\t\tconst digit = digitCharacters.indexOf(c);\n\t\tvalue = value * 83 + digit;\n\t}\n\treturn value;\n}\n\nfunction validateBlurhash(blurhash: string): void {\n\tif (!blurhash || blurhash.length < 6) throw new Error('The blurhash string must be at least 6 characters');\n\n\tconst sizeFlag = decode83(blurhash[0]);\n\tconst numY = Math.floor(sizeFlag / 9) + 1;\n\tconst numX = (sizeFlag % 9) + 1;\n\n\tif (blurhash.length !== 4 + 2 * numX * numY)\n\t\tthrow new Error(`blurhash length mismatch: length is ${blurhash.length} but it should be ${4 + 2 * numX * numY}`);\n}\n\nexport function isBlurhashValid(blurhash: string): { isValid: true } | { isValid: false; errorReason: string } {\n\ttry {\n\t\tvalidateBlurhash(blurhash);\n\t} catch (error) {\n\t\tconst message = error instanceof Error ? error.message : JSON.stringify(error);\n\t\treturn { isValid: false, errorReason: message };\n\t}\n\n\treturn { isValid: true };\n}\n\nconst digitCharacters = [\n\t'0',\n\t'1',\n\t'2',\n\t'3',\n\t'4',\n\t'5',\n\t'6',\n\t'7',\n\t'8',\n\t'9',\n\t'A',\n\t'B',\n\t'C',\n\t'D',\n\t'E',\n\t'F',\n\t'G',\n\t'H',\n\t'I',\n\t'J',\n\t'K',\n\t'L',\n\t'M',\n\t'N',\n\t'O',\n\t'P',\n\t'Q',\n\t'R',\n\t'S',\n\t'T',\n\t'U',\n\t'V',\n\t'W',\n\t'X',\n\t'Y',\n\t'Z',\n\t'a',\n\t'b',\n\t'c',\n\t'd',\n\t'e',\n\t'f',\n\t'g',\n\t'h',\n\t'i',\n\t'j',\n\t'k',\n\t'l',\n\t'm',\n\t'n',\n\t'o',\n\t'p',\n\t'q',\n\t'r',\n\t's',\n\t't',\n\t'u',\n\t'v',\n\t'w',\n\t'x',\n\t'y',\n\t'z',\n\t'#',\n\t'$',\n\t'%',\n\t'*',\n\t'+',\n\t',',\n\t'-',\n\t'.',\n\t':',\n\t';',\n\t'=',\n\t'?',\n\t'@',\n\t'[',\n\t']',\n\t'^',\n\t'_',\n\t'{',\n\t'|',\n\t'}',\n\t'~',\n];\n"],"mappings":"AAAA;;AAiBA,SAASA,YAAYA,CAACC,KAAa,EAAU;EAC5C,MAAMC,CAAC,GAAGD,KAAK,GAAG,GAAG;EACrB,IAAIC,CAAC,IAAI,OAAO,EAAE,OAAOA,CAAC,GAAG,KAAK,CAAC,KAC9B,OAAOC,IAAI,CAACC,GAAG,CAAC,CAACF,CAAC,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;AAC/C;AAEA,OAAO,SAASG,QAAQA,CAACJ,KAAa,EAAO;EAC5C,MAAMK,IAAI,GAAGL,KAAK,IAAI,EAAE;EACxB,MAAMM,IAAI,GAAIN,KAAK,IAAI,CAAC,GAAI,GAAG;EAC/B,MAAMO,IAAI,GAAGP,KAAK,GAAG,GAAG;EACxB,OAAO;IAAEQ,CAAC,EAAET,YAAY,CAACM,IAAI,CAAC,GAAG,GAAG;IAAEI,CAAC,EAAEV,YAAY,CAACO,IAAI,CAAC,GAAG,GAAG;IAAEI,CAAC,EAAEX,YAAY,CAACQ,IAAI,CAAC,GAAG;EAAI,CAAC;AACjG;AAEA,OAAO,SAASI,QAAQA,CAACC,GAAW,EAAU;EAC7C,IAAIZ,KAAK,GAAG,CAAC;EACb,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAME,CAAC,GAAGH,GAAG,CAACC,CAAC,CAAC;IAChB,MAAMG,KAAK,GAAGC,eAAe,CAACC,OAAO,CAACH,CAAC,CAAC;IACxCf,KAAK,GAAGA,KAAK,GAAG,EAAE,GAAGgB,KAAK;EAC3B;EACA,OAAOhB,KAAK;AACb;AAEA,SAASmB,gBAAgBA,CAACC,QAAgB,EAAQ;EACjD,IAAI,CAACA,QAAQ,IAAIA,QAAQ,CAACN,MAAM,GAAG,CAAC,EAAE,MAAM,IAAIO,KAAK,CAAC,mDAAmD,CAAC;EAE1G,MAAMC,QAAQ,GAAGX,QAAQ,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAMG,IAAI,GAAGrB,IAAI,CAACsB,KAAK,CAACF,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC;EACzC,MAAMG,IAAI,GAAIH,QAAQ,GAAG,CAAC,GAAI,CAAC;EAE/B,IAAIF,QAAQ,CAACN,MAAM,KAAK,CAAC,GAAG,CAAC,GAAGW,IAAI,GAAGF,IAAI,EAC1C,MAAM,IAAIF,KAAK,CAAE,uCAAsCD,QAAQ,CAACN,MAAO,qBAAoB,CAAC,GAAG,CAAC,GAAGW,IAAI,GAAGF,IAAK,EAAC,CAAC;AACnH;AAEA,OAAO,SAASG,eAAeA,CAACN,QAAgB,EAA+D;EAC9G,IAAI;IACHD,gBAAgB,CAACC,QAAQ,CAAC;EAC3B,CAAC,CAAC,OAAOO,KAAK,EAAE;IACf,MAAMC,OAAO,GAAGD,KAAK,YAAYN,KAAK,GAAGM,KAAK,CAACC,OAAO,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;IAC9E,OAAO;MAAEI,OAAO,EAAE,KAAK;MAAEC,WAAW,EAAEJ;IAAQ,CAAC;EAChD;EAEA,OAAO;IAAEG,OAAO,EAAE;EAAK,CAAC;AACzB;AAEA,MAAMd,eAAe,GAAG,CACv}